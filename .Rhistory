install.packages("swirl")
library(swirl)
install_from_swirl("R Progrmming")
install_from_swirl("R Programming")
swirl()
5+7
x<-5+7
x
y<-x-3
y
c(1.1, 9, 3.14)
z<-c(1,1, 9, 3.14)
z<-c(1.1, 9, 3.14)
?c
z
c(z, 555, z)
z*2J+100
z*2+100
my_sqrt<-sqrt(z-1)
my_sqrt
my_div<-z/my_sqrt
my_div
c(1,2,3,4)+c(0,10)
c(1,2,3,4)+c(0,10,100)
install.packages("swirl")
install.packages("swirl")
z*2+1000
my
my_div
getwd()
ls()
x<-9
ls()
dir()
?change dir
Play()
?list.files
args()
args(list.files)
old.dir<-list.files
old.dir<-getwd()
dir.create(getwd()<-testdir)
?dir.create()
dir.create(testdir)
getwd()
dir.create("testdir")
setwd("testdir")
file.create("mytest.R")
list.files()
file.exists()
file.exists("mytest.R")
file.info("mytest.R")
file.rename("mytest2.R")
file.rename(from"mytest.R" to "mytest2.R")
file.rename from "mytest.R" to "mytest2.R"
?file.rename
file.rename(from="mytest.R" to="mytest2.R")
file.rename(from mytest.R to mytest2.R)
file.rename(from = "mytest.R" to = "mytest2.R")
file.rename(from = "mytest.R", to = "mytest2.R")
file.copy(from = "mytest2.R", to = "mytest3.R")
file.path("mytest2.R")
file.path("mytest2.R")
file.path("mytest3.R")
?file.path
file.path"folder1", "folder2")
getwd()
file.path("folder1", "folder2")
?dir.create
dir.create("testdir2", recursive = TRUE, "testdir3")
dir.create(file.path("testdir2", "testdir3", recursive = TRUE))
dir.create(file.path('testdir2', 'testdir3', recursive = TRUE))
dir.create(file.path('testdir2', 'testdir3'), recursive = TRUE)
setwd(old.dir)
unlink('testdir', recursive = TRUE)
library(swirl)
swirl()
1:20
pi:10
15:1
?':'
seq(1,20)
seq(0,10,by=0.5)
my_seq<-seq(5,10, lenth=30)
my_seq<-seq(5,10,length=30)
length()
length(my_seq)
1:length(my_seq)
seq(1,length(my_seq))
seq(alom)
seq(along.with=my_seq)
seq_along(my_seq)
rep(0,times=40)
rep(c(0,1,2),times=10)
rep(c(0,1,2),each=10)
num_vec<-c(0.5,55,-10,6)
num_vect<-c(0.5,55,-10,6)
tf<-num_vect<1
tf
num_vect>=6
"my_char<-c("my","name","is")
my_char<_c("my","name","is")
my_char<-c("my","name","is")
my_char<-c("My","name","is")
my_char
paste(my_char, collapse=" ")
my_name<-c(my_char, "Liz")
my_name
paste(my_name, collapse=" ")
paste("Hello","World!",sep=" ")
paste("Hello","world",sep=" ")
paste("Hello","world!",sep=" ")
paste(1:3,c("x","y","z"),sep="")
paste(1:3,c("x", "y", "z"), sep="")
paste(1:3, c("X", "Y", "Z"), sep="")
paste(LETTERS, 1:4, SEP="-")
PASTE(LETTERS,1:4,sep="-")
paste(LETTERS, 1:4, sep="-")
x<-c(44,NA,5,NA)
x*3
y<-rnorm(1000)
z<-rep(NA,1000)
my_data<-sample(c(y,z),100)
is.na(my_data)
my_na<-is.na(my_data)
my_na
my_data == NA
sum(my_data)
sum(my_na)
my_data
0/0
Inf-Inf
x
x[1:10]
x[is.na9x0]
x[is.na(x)]
y<-x[!is.na(x)]
y
y[y>0]
x[x>0]
x[!is.na(x) & x>0]
x[3,5,7]
x[3:5:7]
x[c(3,5,7)]
x[0]
x[300]
x[3000]
x[c(-2,-10)]
x[-c(2,10)]
vect<-c(foo=11,bar=2,norf=NA)
vect
names(vect)
vect2<-c(11,2,NA)
names(vect2)<-c("foo","bar","norf")
identical(vect,vect2)
vect["bar"]
vect[c("foo","bar")]
my_vector(1:20)
my_vector<-1:20
my_vector
dim(my_vector)
length(my_vector)
dim(my_vector)<-c(4,5)
dim(my_vector)
attributes(my_vector)
my_vector
class(my_vector)
my_matrix<-my_vector
?matrix()
?matrix
my_matrix2<-matrix(data=1:20, nrow=4, ncol=5)
identical(my_matrix.my_matrix2)
identical(my_matrix, my_matrix2)
patients<-c(Bill)
patients<-c("Bill", "Gina", "Kelly", "Sean")
cbind(patients, my_matrix)
my_data<- data.frame(patients, my_matrix)
my_data
class(my_data)
cnames<-c("patient","age","weight","bp","rating")
cnames<-c("patient", "age", "weight", "bp", "rating")
cnames<- c("patient", "age", "weight", "bp", "rating")
info()
cnames<-c("patient","age","weight","bp","rating","test")
?colnames
colnames(my_data)<-cnames
my_data
TRUE==TRUE
(FALSE==TRUE) ==FALSE
6==7
6<7
10<=10
5!=7
5 NOT 7
5!=7
5 !==7
5 !NOT 7
?not
5 NOT== 7
SKIP()
INFO()
skip()
FALSE & FALSE
TRUE & c(TRUE, FALSE, FALSE)
TRUE && c(TRUE, FALSE, FALSE)
TRUE | c(TRUE, FALSE, FALSE)
TRUE || c(TRUE, FALSE, FALSE)
5 >8 || 6 != 8 && 4 > 3.9
isTRUE(6>4)
identical('twins', 'twins')
xor(5==6)
xor(5 == 6, !FALSE)
ints<-sample(10)
ints
ints > 5
which(ints>7)
any(ints<0)
all(ints>0)
Sys.Date()
mean(c(2,4,5))
submit(borin_function)
submit(boring_function)
boring_function <- function(x) {x}
submit()
boring_function('My first function')
boring_function('My first function!')
boring_function
info()
bye()
library(swirl)
swirl()
source('C:/Users/eliza/AppData/Local/Temp/RtmpGwnNEm/my_mean.R')
submit(my_mean)
source('C:/Users/eliza/AppData/Local/Temp/RtmpGwnNEm/my_mean.R')
source('C:/Users/eliza/AppData/Local/Temp/RtmpGwnNEm/my_mean.R')
source('C:/Users/eliza/AppData/Local/Temp/RtmpGwnNEm/my_mean.R')
my_mean
submit()
my_vector<-c(4,5,10)
my_mean(c(4.5.10))
my_mean(c(4,5,10))
remainder
remainder(10)
remainder
infor()
info()
skip()
remainder(5)
remainder(11,5)
remainder(divisor=11, num=5)
remainder(4,div=2)
args(remainder)
skip()
submit()
View(evaluate)
evaluate(sd, dat=c(1.4,3.6,7.9,8.8))
evaluate(function(x){x+1}, 6)
evaluate(function(x){x(1)},c(8,4,0))
evaluate(function(x){X[1]},C(8,4,0))
SKIP()
evaluate(function(x){x[1]}, c(8,4,0)
1
evaluate(function(x){x[1], c(8,4,0))}
evaluate(function(x){x[1], c(8,4,0)})
evaluate
skip()
evaluate(function(x){x[3]}, c(8,4,0))
skip()
?paste
paste("Programming","is","fun!")
submit()
telegram("Hi!","Fanlong"
)
submit()
submit()
mad_libs()
arguments.
arguments.
noun<-args[["noun"]]
# Don't modify any code below this comment.
submit(
)
mad_libs
mad_libs(place=Irving, adjective=blue, noun=pan)
mad_libs(Irving, blue, pan)
skip()
skip()
"I" %p% "love" %p% "R!"
d1<-Sys.date()
d1<-Sys.Date()
class(d1)
unclass(d1)
d1
d2<-as,Date("1969-01-01")
d2<-as.Date("1969-01-01")
unclass(d2)
t1<-Sys.time()
t1
class(t1)
unclass(t1)
t2<-as.POSIXlt(Sys.time())
class(t2)
unclass(t2)
t2
unclass(t2)
str(unclass(t2))
t2$min
weekdays(d1)
months(t1)
quarters(t1)
quarters(t2)
t3<-"October 17, 1986 08:24"
t4<-strptime(t3, "%B %d, %Y %H %M")
t4 <- strptime(t3, "%B %d, %Y %H %M")
t4<-strptime(t3, "%B %d, %Y %H:%M")
t4
class(t4)
Sys.time() > t1
Sys.time() - t1
difftime(Sys.time(), t1, units='days')
?Create.dir
??Create.dir
getwd()
getwd()
getwd()
setwd() "C:/Users/eliza/Desktop/R_Code"
setwd("C:/Users/eliza/Desktop/R_Code")
getwd()
list_files
setwd("C:/Users/eliza/Desktop/R_Code/ProgrammingAssignment2-master")
getwd()
